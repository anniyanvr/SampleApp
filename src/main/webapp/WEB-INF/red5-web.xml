<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!--
	Defines a properties file for dereferencing variables
	-->
	<bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="location" value="/WEB-INF/red5-web.properties" />
	</bean>
	
	<!--
	Defines the web context
	-->
	<bean id="web.context" class="org.red5.server.Context" 
		autowire="byType" />
	
	<!--
	Defines the web scopes
	-->
	<bean id="web.scope" class="org.red5.server.scope.WebScope">
		<property name="server" ref="red5.server" />
		<property name="parent" ref="global.scope" />
		<property name="context" ref="web.context" />
		<property name="handler" ref="web.handler" />
		<property name="contextPath" value="${webapp.contextPath}" />
		<property name="virtualHosts" value="${webapp.virtualHosts}" />
	</bean>
	
	<context:component-scan base-package="io.antmedia.rest" />
	
	<bean id="preference.store" class="io.antmedia.datastore.preference.PreferenceStore">
		<constructor-arg value="/WEB-INF/red5-web.properties" />
	</bean>
	
	<!-- 
	<bean id="db.datastore" class="io.antmedia.datastore.db.MongoStore">
		<constructor-arg value="${webapp.dbName}" />
	</bean>
	 -->
	 
	 
	<bean id="db.datastore" class="io.antmedia.datastore.db.MapDBStore">
		<constructor-arg value="${webapp.dbName}" />
	</bean>
	
	
	<bean id="app.settings" class="io.antmedia.AppSettings" >
		<property name="mp4MuxingEnabled" value="${settings.mp4MuxingEnabled}" />
		<property name="addDateTimeToMp4FileName" value="${settings.addDateTimeToMp4FileName}" />
		<property name="encoderSettingsString" value="${settings.encoderSettingsString}" />
		
      	<property name="hlsMuxingEnabled" value="${settings.hlsMuxingEnabled}" />
     	<property name="hlsListSize" value="${settings.hlsListSize}" />
      	<property name="hlsTime" value="${settings.hlsTime}" />
      	<property name="hlsPlayListType" value="${settings.hlsPlayListType}" />
      	<property name="deleteHLSFilesOnEnded" value="${settings.deleteHLSFilesOnEnded}" />
      	<property name="serverName" value="#{ @'ant.media.server.settings'.serverName }" />
      	<property name="acceptOnlyStreamsInDataStore" value="${settings.acceptOnlyStreamsInDataStore}" />
      	
      	<property name="facebookClientId" value="${facebook.clientId}" />
      	<property name="facebookClientSecret" value="${facebook.clientSecret}" />
      	
      	<property name="periscopeClientId" value="${periscope.clientId}" />
      	<property name="periscopeClientSecret" value="${periscope.clientSecret}" />
      	
      	<property name="youtubeClientId" value="${youtube.clientId}" />
      	<property name="youtubeClientSecret" value="${youtube.clientSecret}" />
      	

      	<property name="objectDetectionDir" value="${settings.objectDetectionModelDir}" />
      	
      	<property name="createPreviewPeriod" value="${settings.createPreviewPeriod}" />      	

      	<property name="previewOverwrite" value="${settings.previewOverwrite}" />
		<property name="vodFolder" value="${settings.vodFolder}" />

		
		<property name="stalkerDBServer" value="${settings.stalkerDBServer}" />
		<property name="stalkerDBUsername" value="${settings.stalkerDBUsername}" />
		<property name="stalkerDBPassword" value="${settings.stalkerDBPassword}" />
	</bean>
	
	
	<bean id="acceptOnlyStreamsInDataStore" class="io.antmedia.security.AcceptOnlyStreamsInDataStore">
			<property name="dataStore"  ref="db.datastore"/>
			<property name="enabled" value="${settings.acceptOnlyStreamsInDataStore}" />
	</bean>
	
	 
	<!--
	Defines the web handler which acts as an applications endpoint
	-->
	<bean id="web.handler" class="io.antmedia.serverapp.pscp.Application" >
		<property name="appSettings" ref="app.settings" />
		 
		<property name="streamPublishSecurityList">
			<list>
				<ref bean="acceptOnlyStreamsInDataStore"/>
				<bean class="io.antmedia.security.ExpireStreamPublishSecurity" >
					<property name="dataStore"  ref="db.datastore"/>
				</bean>
			</list>
		</property>
		
		<property name="dataStore" ref="db.datastore" />
		 
	</bean>
	<!-- 
   <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
    <property name="beans">
      <map>
        <entry key="bean:name=appSettingsBeanPSCP" value-ref="app.settings"/>
      </map>
    </property>
  </bean>
	 -->

	
 
</beans>
